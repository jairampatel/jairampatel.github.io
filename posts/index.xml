<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Jairam's Blog</title><link>https://jairampatel.github.io/posts/</link><description>Recent content in Posts on Jairam's Blog</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Fri, 16 Feb 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://jairampatel.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>How to get started in SEO: A Beginner's Guide</title><link>https://jairampatel.github.io/2024/02/16/how-to-get-started-in-seo-a-beginners-guide/</link><pubDate>Fri, 16 Feb 2024 00:00:00 +0000</pubDate><guid>https://jairampatel.github.io/2024/02/16/how-to-get-started-in-seo-a-beginners-guide/</guid><description>&lt;h1 id="how-to-get-started-in-seo-a-beginners-guide"&gt;How to Get Started in SEO: A Beginner’s Guide&lt;/h1&gt;
&lt;p&gt;SEO stands for search engine optimization, which is the process of improving the quality and quantity of traffic to your website from organic search results. Organic traffic is the traffic that you don’t have to pay for, unlike ads or sponsored posts.&lt;/p&gt;
&lt;p&gt;SEO is important because it helps your website rank higher on search engines like Google or Bing, which means more people will find your content, products, or services. Higher rankings also increase your credibility and authority in your niche, which can lead to more conversions and sales.&lt;/p&gt;</description></item><item><title>Latency Showdown: AWS Lambda vs Azure Cloud Functions vs GCP Cloud Functions</title><link>https://jairampatel.github.io/2023/03/08/latency-showdown-aws-lambda-vs-azure-cloud-functions-vs-gcp-cloud-functions/</link><pubDate>Wed, 08 Mar 2023 00:00:00 +0000</pubDate><guid>https://jairampatel.github.io/2023/03/08/latency-showdown-aws-lambda-vs-azure-cloud-functions-vs-gcp-cloud-functions/</guid><description>&lt;p&gt;&lt;strong&gt;Disclaimer: These results are representative of my specific simulation setup. Simulations with different parameters may yield different results. For example: higher volume, larger function size, different language, different region etc…&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id="intro"&gt;Intro&lt;/h2&gt;
&lt;p&gt;If you&amp;rsquo;re thinking of using serverless functions, it&amp;rsquo;s crucial to pick a cloud provider that gives great results without fail. This article compares AWS Lambda, Azure Cloud Functions, and GCP Cloud Functions to see which is the fastest and easiest to use. When you finish reading, you&amp;rsquo;ll know which one is perfect for your business. Let&amp;rsquo;s dive into this detailed comparison of the three best serverless function providers!&lt;/p&gt;</description></item><item><title>How do you find your top 3 favorite Disney movies?</title><link>https://jairampatel.github.io/2022/04/19/how-do-you-find-your-top-3-favorite-disney-movies/</link><pubDate>Tue, 19 Apr 2022 00:00:00 +0000</pubDate><guid>https://jairampatel.github.io/2022/04/19/how-do-you-find-your-top-3-favorite-disney-movies/</guid><description>&lt;h2 id="what-is-the-problem"&gt;What is the problem?&lt;/h2&gt;
&lt;p&gt;How would you find your top 3 favorite Disney movies? Even if you were to consider just the movies from the last 10 years, &lt;a href="https://en.wikipedia.org/wiki/List_of_Walt_Disney_Pictures_films"&gt;that&amp;rsquo;s a lot of movies to consider&lt;/a&gt; (an even 100 as of writing this post).&lt;/p&gt;
&lt;p&gt;If this question were asked in a programming environment, we would probably use quick-sort easy-peasy since it’s pretty fast with an average runtime of \(\mathcal{O}(n\log{}n)\). However, if this were asked in a human environment (strange, I know), quick sort may not be the best since the worst case number of comparisons is \(\mathcal{O}(n^2)\). For example, if we were working with 100 Disney movies, then in the worst case, we would have to ask “Which do you like better: movie X or movie Y” 10,000 times. At that point, you would probably prefer a faster but less accurate format, &lt;a href="https://www.buzzfeed.com/luisdelvalle/can-we-guess-your-fave-disney-movie"&gt;maybe a Buzzfeed article&lt;/a&gt;?&lt;/p&gt;</description></item><item><title>Shelltube a Youtube client for Powershell</title><link>https://jairampatel.github.io/2014/11/27/shelltube-a-youtube-client-for-powershell/</link><pubDate>Thu, 27 Nov 2014 00:00:00 +0000</pubDate><guid>https://jairampatel.github.io/2014/11/27/shelltube-a-youtube-client-for-powershell/</guid><description>&lt;p&gt;&lt;a href="https://github.com/jairampatel/shelltube"&gt;Download Shelltube here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;With the addition of this post, 67% of my blog posts will have been about Powershell. I should probably diversify my projects a bit.&lt;/p&gt;
&lt;p&gt;Shelltube is a Youtube client for Powershell. Just type what video you want to listen/watch and Shelltube will play it for you.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How it works&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In version 1.0, Shelltube will launch Internet Explorer (sorry, it was the common denominator among Windows users). Although the default setting is to display the window, the user will have the option of hiding the Internet Explorer window.
The client will call the Youtube API in order to retrieve the results of the search query the user entered. At this point, the user can select which video to watch. Selecting a video will navigate the Internet Explorer window to the Youtube video url.&lt;/p&gt;</description></item><item><title>Introducing Shellit a Reddit client for Powershell</title><link>https://jairampatel.github.io/2013/06/30/introducing-shellit-a-reddit-client-for-powershell/</link><pubDate>Sun, 30 Jun 2013 00:00:00 +0000</pubDate><guid>https://jairampatel.github.io/2013/06/30/introducing-shellit-a-reddit-client-for-powershell/</guid><description>&lt;p&gt;A few weeks ago, I had the idea of making a Reddit client for PowerShell. One of the reasons for making Shellit was you can browse Reddit and look like you’re working that I hadn’t done much scripting in PowerShell before. Plus it gave me a chance to finally start making my own repositories on Github.&lt;/p&gt;
&lt;p&gt;Shellit is extremely primitive. Currently, users can:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Login if they want to&lt;/li&gt;
&lt;li&gt;Navigate through different pages of reddit&lt;/li&gt;
&lt;li&gt;Open links in the PowerShell window&lt;/li&gt;
&lt;li&gt;View comments on self posts&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Some of the improvements I’ll probably make in my next update will be to:&lt;/p&gt;</description></item><item><title>Installing Arch Linux on My Cr 48</title><link>https://jairampatel.github.io/2013/04/17/installing-arch-linux-on-my-cr-48/</link><pubDate>Wed, 17 Apr 2013 00:00:00 +0000</pubDate><guid>https://jairampatel.github.io/2013/04/17/installing-arch-linux-on-my-cr-48/</guid><description>&lt;p&gt;CR-48 is the beta Chromebook released by Google several years ago. It was given away for free to those who applied/were selected. I consider myself extremely fortunate for having been selected and I tried to make the most of it.&lt;/p&gt;
&lt;p&gt;If you’re not aware, Chromebooks run on Chrome OS, which is essentially just the Chrome browser. It is built upon a Linux kernel so if you were to flip the hardware switch to developer mode (as I did multiple times), you would be able to use the shell and gain more control over your Chromebook.&lt;/p&gt;</description></item></channel></rss>